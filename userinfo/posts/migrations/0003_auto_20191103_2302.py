# Generated by Django 2.2.3 on 2019-11-03 17:32

from django.conf import settings
from django.db import migrations, models
import django.utils.timezone
import taggit.managers


class Migration(migrations.Migration):

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('posts', '0002_auto_20191103_2031'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='posts',
            options={'ordering': ('-publish',)},
        ),
        migrations.AddField(
            model_name='posts',
            name='body',
            field=models.TextField(null=True, verbose_name='Body'),
        ),
        migrations.AddField(
            model_name='posts',
            name='created',
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AddField(
            model_name='posts',
            name='publish',
            field=models.DateTimeField(default=django.utils.timezone.now, null=True),
        ),
        migrations.AddField(
            model_name='posts',
            name='slug',
            field=models.SlugField(max_length=264, null=True, unique_for_date='publish'),
        ),
        migrations.AddField(
            model_name='posts',
            name='status',
            field=models.CharField(choices=[('draft', 'Draft'), ('published', 'Published')], default='draft', max_length=10, null=True),
        ),
        migrations.AddField(
            model_name='posts',
            name='tags',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='posts',
            name='updated',
            field=models.DateTimeField(auto_now=True, null=True),
        ),
        migrations.AddField(
            model_name='posts',
            name='user_id',
            field=models.ForeignKey(null=True, on_delete='User', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='posts',
            name='description',
            field=models.CharField(default='Description', max_length=100, null=True, verbose_name='Description'),
        ),
        migrations.AlterField(
            model_name='posts',
            name='image',
            field=models.CharField(default='Image1', max_length=10, null=True, verbose_name='Image'),
        ),
        migrations.AlterField(
            model_name='posts',
            name='place',
            field=models.CharField(default='Place1', max_length=10, null=True, verbose_name='Place'),
        ),
        migrations.AlterField(
            model_name='posts',
            name='title',
            field=models.CharField(default='title', max_length=10, null=True, verbose_name='Title'),
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, null=True)),
                ('email', models.EmailField(max_length=254, null=True, verbose_name='Email')),
                ('body', models.TextField(null=True, verbose_name='Body')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('post', models.ForeignKey(on_delete='Posts', to='posts.Posts')),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
    ]
